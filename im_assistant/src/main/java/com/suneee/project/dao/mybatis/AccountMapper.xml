<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suneee.project.dao.mybatis.AccountMapper">
	<!-- MySQL的分页查询 -->
	<sql id="mysqlPageSqlSuffix">
		LIMIT
		#{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</sql>

	<resultMap id="BaseResultMap" type="com.suneee.project.model.Account">
		<result column="username" jdbcType="CHAR" property="username" />
		<result column="nickname" jdbcType="CHAR" property="nickname" />
		<result column="intro" jdbcType="CHAR" property="intro" />
		<result column="type" jdbcType="CHAR" property="type" />
		<result column="brand" jdbcType="CHAR" property="brand" />
		<result column="hotline" jdbcType="CHAR" property="hotline" />
		<result column="business" jdbcType="CHAR" property="business" />
		<result column="plainPassword" jdbcType="CHAR" property="plainPassword" />
		<result column="name" jdbcType="CHAR" property="name" />
		<result column="email" jdbcType="CHAR" property="email" />
		<result column="encryptedPassword" jdbcType="CHAR" property="encryptedPassword" />
		<result column="creationDate" jdbcType="CHAR" property="creationDate" />
		<result column="modificationDate" jdbcType="CHAR" property="modificationDate" />
		<result column="vCode" jdbcType="CHAR" property="vCode" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Oct 10 
			09:21:16 CST 2014. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		username,
		nickname,
		intro,
		type,
		brand,
		hotline,
		business,
		plainPassword,
		name,
		email,
		encryptedPassword,
		creationDate,
		modificationDate,
		vCode
	</sql>
	<select id="selectByExample" parameterType="com.suneee.project.model.AccountExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from imAccount
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<include refid="mysqlPageSqlSuffix" />
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from imAccount
		where username = #{username,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from imAccount
		where username = #{username,jdbcType=CHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.suneee.project.model.AccountExample">
		delete from imAccount
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.suneee.project.model.Account">
		insert into imAccount (email, username, plainPassword
		)
		values (#{email,jdbcType=CHAR}, #{username,jdbcType=CHAR},
		#{plainPassword,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.suneee.project.model.Account">
		insert into imAccount
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="plainPassword != null">
				plainPassword,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="vCode != null">
				vCode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=CHAR},
			</if>
			<if test="plainPassword != null">
				#{plainPassword,jdbcType=CHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=CHAR},
			</if>
			<if test="vCode != null">
				#{vCode,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.suneee.project.model.AccountExample"
		resultType="java.lang.String">
		select count(*) from imAccount
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update imAccount
		<set>
			<if test="record.username != null">
				username = #{record.username,jdbcType=CHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=CHAR},
			</if>
			<if test="record.plainPassword != null">
				plainPassword = #{record.plainPassword,jdbcType=CHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update imAccount
		set email = #{record.email,jdbcType=CHAR},
		username = #{record.username,jdbcType=CHAR},
		plainPassword = #{record.plainPassword,jdbcType=CHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.suneee.project.model.Account">
		update imAccount
		<set>
			<if test="email != null">
				email = #{email,jdbcType=CHAR},
			</if>
			<if test="plainPassword != null">
				plainPassword = #{plainPassword,jdbcType=CHAR},
			</if>
		</set>
		where username = #{username,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.suneee.project.model.Account">
		update imAccount
		set email = #{email,jdbcType=CHAR},
		plainPassword = #{plainPassword,jdbcType=CHAR}
		where username = #{username,jdbcType=CHAR}
	</update>
</mapper>